#-------------------------------------------------------------------------------
# lf File Explorer Configuration
#-------------------------------------------------------------------------------

# Settings
#-------------------------------------------------------------------------------

# Shell settings.
set shell bash
set shellopts '-eu'
set ifs "\n"

# Start scrolling before cursor reaches edge of window.
set scrolloff 3

# Configure the prompt.
# TODO: Use system theme.
# TODO: Use fallback symbols for virtual terminal.
set promptfmt "\033[92;22m%u\033[0mÂ·%h \033[34;1m%d\033[0m%f"

# Use icons.
set icons

# Show hidden files by default.
set hidden

# Enable sixel image previews.
# NOTE: Requires `lf-git` for sixel support.
#   see: https://aur.archlinux.org/packages/lf-git
set sixel

# Preview files.
# NOTE: You can't use environment vars directly in lfrc.
set previewer ~/.local/scripts/terminal-preview.sh

# Column ratios.
set ratios 1:1:3

# Key mappings
#-------------------------------------------------------------------------------

# Clear defaults.
map <c-y>
map <c-e>
map c
map d
map f
map F
map H
map i
map L
map m
map M
map p
map q
map r
map t
map u
map v
map w
map x
map y
map z
map "!"
map "$"
map "%"
map "&"
map ";"
map ","
map "'"
map '"'

# Navigation.
map h updir
map j down
map k up
map l open

# Enter lf commands.
map ":" read

# Enter shell commands.
map <enter> shell

# Search.
map "/" search
map "?" search-back
map n search-next
map N search-prev

# Quit.
map <esc> quit
map q %{{
    lf -remote "send $id :cd $LF_REMEMBER_CWD; quit"
}}
map Q quit

# Toggle hidden files.
map . set hidden!

# Open in editor.
map e $edit $f

# Open in browser.
map b $browse $f

# Open text files with terminal-preview script, everything else with xdg-open.
cmd open ${{
    $XDG_CONFIG_HOME/lf/lf-open.sh $f
}}

# Copy/paste.
map y copy
map p paste

# Delete.
map d delete

# TODO: Add file extraction shortcuts.
# TODO: Add file move/copy/delete shortcuts.

# Terminal integration
#-------------------------------------------------------------------------------

# Update terminal title with current working directory.
cmd on-cd &{{
    $XDG_SCRIPTS_HOME/set-terminal-title.sh "$(pwd | sed "s|$HOME|~|")"
}}

# Update terminal title on start.
on-cd

# Configuration graveyard
#-------------------------------------------------------------------------------

# Execute current file (must be executable).
# map x $$f
# map X !$f

# Dedicated keys for file opener actions.
# map o &xdg-open $f

# make sure trash folder exists
# %mkdir -p ~/.trash

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
# cmd trash %set -f; mv $fx ~/.trash

# define a custom 'delete' command
# cmd delete ${{
#     set -f
#     printf "$fx\n"
#     printf "delete?[y/n]"
#     read ans
#     [ "$ans" = "y" ] && rm -rf $fx
# }}

# use '<delete>' key for either 'trash' or 'delete' command
# map <delete> trash
# map <delete> delete

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
# cmd extract ${{
#     set -f
#     case $f in
#         *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
#         *.tar.gz|*.tgz) tar xzvf $f;;
#         *.tar.xz|*.txz) tar xJvf $f;;
#         *.zip) unzip $f;;
#         *.rar) 7z x $f;;
#         *.7z) 7z x $f;;
#     esac
# }}
#
# # compress current file or selected files with tar and gunzip
# cmd tar ${{
#     set -f
#     mkdir $1
#     cp -r $fx $1
#     tar czf $1.tar.gz $1
#     rm -rf $1
# }}
#
# # compress current file or selected files with zip
# cmd zip ${{
#     set -f
#     mkdir $1
#     cp -r $fx $1
#     zip -r $1.zip $1
#     rm -rf $1
# }}
