#!/usr/bin/env bash
#-------------------------------------------------------------------------------
# River configuration script
#
# See the river(1), riverctl(1), and rivercarro(1) man pages for complete
# documentation.
#-------------------------------------------------------------------------------

declare config_dir=${XDG_CONFIG_HOME:-$HOME/.config}
declare opt_dir=${XDG_OPT_HOME:-$HOME/.local/opt}
declare scripts_dir=${XDG_SCRIPTS_HOME:-$HOME/.local/scripts}

# Imports
#-------------------------------------------------------------------------------

# shellcheck disable=SC1091
source "$opt_dir/theme/theme.sh"

# shellcheck disable=SC1091
source "$opt_dir/shell-utils/debug.sh"

# Validation
#-------------------------------------------------------------------------------

assert_dependency fuzzel
assert_dependency qutebrowser
assert_dependency makoctl
assert_dependency wezterm
assert_dependency way-displays

# Systemd integration
# TODO: This should be part of the river/systemd integration.
#-------------------------------------------------------------------------------

systemd-cat --identifier=river echo "Initializing River..."

# Share part of river environment with systemd.
# NOTE: `spawn` is necessary, or this won't work.
systemd_variables="XDG_CURRENT_DESKTOP XDG_SESSION_TYPE WAYLAND_DISPLAY"
riverctl spawn "dbus-update-activation-environment --systemd $systemd_variables"

# Other system services can respond to the underlying wayland-session or graphical-session.target.
systemctl --user start river-session.target

# Input configuration
#-------------------------------------------------------------------------------

riverctl focus-follows-cursor normal

# Keyboard repeat rate
riverctl set-repeat 50 300

# Mouse configuration
riverctl input pointer-1133-49309-Logitech_G203_LIGHTSYNC_Gaming_Mouse accel-profile flat
riverctl input pointer-1133-49309-Logitech_G203_LIGHTSYNC_Gaming_Mouse pointer-accel 1.0

# Hide inactive cursor
riverctl hide-cursor timeout 3000

# Styling
#-------------------------------------------------------------------------------

riverctl background-color "$(color_zerox "$system_bg")"
riverctl border-color-focused "$(color_zerox "$primary_6")"
riverctl border-color-unfocused "$(color_zerox "$primary_2")"
riverctl border-color-urgent "$(color_zerox "$red_4")"

riverctl border-width 3

riverctl xcursor-theme "$cursor_theme" "$cursor_size"

# Layout generator
#-------------------------------------------------------------------------------

# Assign and launch rivercarro (layout generator).
riverctl default-layout rivercarro
riverctl spawn "rivercarro -inner-gaps 6 -outer-gaps 6 -no-smart-gaps -main-ratio 0.65 -main-location right"

# App configuration
#-------------------------------------------------------------------------------

riverctl float-filter-add app-id yad
riverctl float-filter-add app-id xdg-desktop-portal-gtk

# Key bindings
#-------------------------------------------------------------------------------
# See all valid keybindings here: `/usr/include/xkbcommon/xkbcommon-keysyms.h`

# New terminal
riverctl map normal Alt T spawn "wezterm"

# Command menu
riverctl map normal Alt O spawn "fuzzel"

# Browser
riverctl map normal Alt B spawn "qutebrowser"

# Browser session
riverctl map normal Alt+Shift B spawn "$scripts_dir/open-qutebrowser-session.sh"

# Dismiss notifications
riverctl map normal Alt D spawn "makoctl dismiss -a"

# Close view
riverctl map normal Alt Q close

# Exit river
riverctl map normal Alt+Shift Q exit

# Lock system
riverctl map normal Alt+Shift Z spawn "$scripts_dir/lock-screen.sh"

# Focus the next/previous view in the layout stack
riverctl map normal Alt J focus-view next
riverctl map normal Alt K focus-view previous

# Swap the focused view with the next/previous view in the layout stack
riverctl map normal Alt+Shift J swap next
riverctl map normal Alt+Shift K swap previous

# Focus the left/right output
riverctl map normal Alt H focus-output left
riverctl map normal Alt L focus-output right

# Send the focused view to the left/right output
# TODO: Save active tag on source output, restore it on destination output.
riverctl map normal Alt+Shift H spawn "$config_dir/river/send-and-focus-output.sh left"
riverctl map normal Alt+Shift L spawn "$config_dir/river/send-and-focus-output.sh right"

# Send the focused view to a specific output
riverctl map normal Alt S spawn "$config_dir/river/send-to-output.sh"

# Cycle focused tags
# see: https://gitlab.com/akumar-xyz/river-shifttags/-/tree/master
riverctl map normal Alt Tab spawn "river-shifttags"
riverctl map normal Alt Backspace spawn "river-shifttags --shift -1"

# Manage specific tags
for i in $(seq 1 9); do
    # NOTE: Unconventional formatting here is to avoid a bug in tree-sitter-bash when parsing `<<`.
    # see: https://github.com/tree-sitter/tree-sitter-bash
    declare tags=$(( 1 << (i - 1) ))

    # Focus tag
    riverctl map normal Alt "$i" set-focused-tags $tags

    # Tag focused view
    riverctl map normal Alt+Shift "$i" set-view-tags $tags

    # Toggle focus of tag
    riverctl map normal Alt+Control "$i" toggle-focused-tags $tags
done

# Bump the focused view to the top of the layout stack
riverctl map normal Alt Z zoom

# Toggle fullscreen
riverctl map normal Alt F toggle-fullscreen

# Change layout orientation
riverctl map normal Alt Right send-layout-cmd rivercarro "main-location right"
riverctl map normal Alt Down send-layout-cmd rivercarro "main-location bottom"
riverctl map normal Alt Left send-layout-cmd rivercarro "main-location left"
riverctl map normal Alt Up send-layout-cmd rivercarro "main-location top"

# Adjust layout main ratio
riverctl map normal Alt Page_Down send-layout-cmd rivercarro "main-ratio +0.05"
riverctl map normal Alt Page_Up send-layout-cmd rivercarro "main-ratio -0.05"

# Take a screenshot of a selected rectangle
riverctl map normal Alt P spawn "$scripts_dir/screenshot-rectangle.sh"
riverctl map normal Alt+Shift P spawn "$scripts_dir/screenshot-rectangle.sh --upload"

# Toggle window float
riverctl map normal Alt Space toggle-float

# Move views with mouse
riverctl map-pointer normal Shift BTN_LEFT move-view

# Resize views with mouse
riverctl map-pointer normal Shift BTN_RIGHT resize-view

# Display management
#-------------------------------------------------------------------------------

way-displays > "/tmp/way-displays.${XDG_VTNR}.${USER}.log" 2>&1 &

# NOTE: Way-displays needs a moment.
sleep 0.25

# Wallpaper
#-------------------------------------------------------------------------------

# shellcheck disable=SC1091
source "$config_dir/wallpaper/wallpaper.sh"

# Status bar
#-------------------------------------------------------------------------------

pkill -x waybar
riverctl spawn waybar

# Systemd integration
#-------------------------------------------------------------------------------

systemd-cat --identifier=river echo "River initialized."

# Clean up the shared environment when river is interrupted or terminated.
session_cleanup () {
    pkill -x waybar
    pkill -x way-displays

    systemd-cat --identifier=river echo "Cleaning River."

    systemctl --user unset-environment "$systemd_variables"

    exit
}

trap session_cleanup INT TERM

# NOTE: The assumption is: if WAYLAND_DISPLAY is in use, river is running.
while [ -n "$WAYLAND_DISPLAY" ]
do
    sleep 0.10
done
